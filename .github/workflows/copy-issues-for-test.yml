# Issueの値の確認を行うためのアクション
name: "Copy issues(For value Check)"
on:
  workflow_dispatch:

jobs:
  get-issues:
    if: github.repository != 'yumemi-inc/android-engineer-codecheck'
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.output_issues_data.outputs.value }}
    steps:
      - name: Getting issues data
        id: get_issues_data
        uses: octokit/request-action@v2.1.7
        with:
          route: GET /repos/yumemi-inc/android-engineer-codecheck/issues
          sort: created
          direction: asc
          # この条件であれば自分が作成したissueは含まれていない
          per_page: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: output_issues_data
        run: |
          result=$(echo '${{ steps.get_issues_data.outputs.data }}' | sed -z 's/\n/%0A/g' | sed -z 's/\r/%0D/g')
          echo "::set-output name=value::${result}"
      - run: echo -e '${{ steps.output_issues_data.outputs.value }}'

  get-myrepo-milestones:
    runs-on: ubuntu-latest
    outputs:
      milestones: ${{ steps.output_milestones_data.outputs.value }}
    steps:
      - name: Getting Milestones data
        id: get_milestones_data
        uses: octokit/request-action@v2.1.7
        with:
          route: GET /repos/${{ github.repository }}/milestones
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: output_milestones_data
        run: |
          result=$(echo '${{ steps.get_milestones_data.outputs.data }}' | sed -z 's/\n/%0A/g' | sed -z 's/\r/%0D/g')
          echo "::set-output name=value::${result}"

  get-myrepo-issues:
    if: github.repository != 'yumemi-inc/android-engineer-codecheck'
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.output_issues_data.outputs.value }}
    steps:
      - name: Getting issues data
        id: get_issues_data
        uses: octokit/request-action@v2.1.7
        with:
          route: GET /repos/${{ github.repository }}/issues
          state: all
          per_page: 100
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: output_issues_data
        run: |
          result=$(echo '${{ steps.get_issues_data.outputs.data }}' | sed -z 's/\n/%0A/g' | sed -z 's/\r/%0D/g')
          echo "::set-output name=value::${result}"
      - run: echo -e '${{ steps.output_issues_data.outputs.value }}'

  sample-output:
    needs: [get-issues]
    runs-on: ubuntu-latest
    steps:
      - name: Check output
        id: check-echo
        run: echo '${{needs.get-issues.outputs.issues}}' | jq '.[].title'
